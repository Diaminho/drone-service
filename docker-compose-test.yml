version: '3'

services:
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: test
      MINIO_ROOT_PASSWORD: password
    command: server --console-address ":9001" /data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
  init-bucket:
    image: minio/mc
    volumes:
      - ./src/test/resources/images:/images
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 test password;
      /usr/bin/mc mb myminio/medication-images;
      /usr/bin/mc anonymous set download myminio/medication-images;
      /usr/bin/mc cp /images/*.jpg myminio/medication-images;
      "
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    expose:
      - '9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  init-kafka-topic:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topic'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic drones-events --replication-factor 1 --partitions 1
      "
  db:
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: example
    volumes:
      - ./src/test/resources/init_db.sql:/docker-entrypoint-initdb.d/init.sql
  drones-microservice:
    build: ./
    depends_on:
      - kafka
      - init-kafka-topic
      - minio
      - init-bucket
      - db
    ports:
      - "8080:8080"
    environment:
      KAFKA_SERVER: kafka:9092
      KAFKA_TOPIC_NAME: drones-events
      DB_URL: jdbc:postgresql://db:5432/drones_db
      DB_USER: postgres
      DB_PASSWORD: example
      CRON_EXPRESSION: "*/30 * * * * *"
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: test
      MINIO_SECRET_KEY: password
      MINIO_BUCKET_NAME: medication-images
      SPRING_PROFILES_ACTIVE: test
volumes:
  minio_storage: {}